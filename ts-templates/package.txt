// Tinkerpop.d.ts
// This file was generated by ts-java.

declare module TinkerPop {

type String_ = string | java.lang.String;

{{#each this}}
import {{shortName}} = {{packageName}}.{{shortName}};
{{/each}}

{{#each this}}
module {{packageName}} {
  export interface {{shortName}} {
    {{#each variants}}
    // {{@key}}
    {{#each this}}
    // {{{generic_proto}}}
    {{name}}Sync({{margs this}}): {{tsReturns}};
    {{/each}}

    {{/each}}
  }
}

{{/each}}

// *Singleton* declares methods & members exported by the node java module.
interface Singleton {
  classpath: Array<string>;
  callMethodSync(instance: any, className: string, methodName: string, ...args: any[]): any;
  callStaticMethodSync(className: string, methodName: string, ...args: any[]): any;

  {{#each this}}
  import(className: '{{packageName}}.{{shortName}}'): {{packageName}}.{{shortName}};
  {{/each}}
  import(className: string): any;

  {{#each this}}
  newInstanceSync(className: '{{packageName}}.{{shortName}}', ...args: any[]): {{packageName}}.{{shortName}};
  {{/each}}
  newInstanceSync(className: string, ...args: any[]): any;
}

var java: Singleton;
}

declare module 'tinkerpop' {
  export = TinkerPop;
}
