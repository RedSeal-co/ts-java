// java.d.ts
// This file was generated by ts-java.

declare module Java {

// *Singleton* declares methods & members exported by the node java module.
export interface Singleton {
  classpath: Array<string>;
  callMethodSync(instance: any, className: string, methodName: string, ...args: any[]): any;
  callStaticMethodSync(className: string, methodName: string, ...args: any[]): any;
  
  newArray(className: string, ...args: any[]): any;

  {{#each this}}
  import(className: '{{packageName}}.{{shortName}}'): {{packageName}}.{{shortName}}Static;
  {{/each}}
  import(className: string): any;

  {{#each this}}
  newInstanceSync(className: '{{packageName}}.{{shortName}}', ...args: any[]): {{packageName}}.{{shortName}};
  {{/each}}
  newInstanceSync(className: string, ...args: any[]): any;
}

type string_t = string | java.lang.String;

{{#each this}}
export import {{shortName}} = {{packageName}}.{{shortName}};
export import {{shortName}}Static = {{packageName}}.{{shortName}}Static;
{{/each}}

{{#each this}}
export module {{packageName}} {
  export interface {{shortName}} {{#if tsInterfaces}}extends {{tsInterfaces}}{{/if}} {
    {{#each variants}}
    // {{@key}}
    {{#each this}}
    // {{{generic_proto}}}
    {{#if isStatic}}
    // static method, see {{shortName}}Static
    {{else}}
    {{name}}Sync({{margs this}}): {{tsReturns}};
    {{/if}}
    {{/each}}

    {{/each}}
  }
  export interface {{shortName}}Static {
    {{#each variants}}
    {{#each this}}
    {{#if isStatic}}
    // {{{generic_proto}}}
    {{name}}Sync({{margs this}}): {{tsReturns}};
    {{/if}}
    {{/each}}

    {{/each}}
  }
}

{{/each}}
}

declare module 'java' {
  var singleton: Java.Singleton;
  export = singleton;
}
